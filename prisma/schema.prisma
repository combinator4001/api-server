// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  PERSON
  COMPANY
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  password  String
  email     String
  showEmail Boolean @default(false)
  imageUrl  String  @default("")
  bio       String  @default("")
  role      Role

  admin   Admin?
  person  Person?
  company Company?

  blogs      Blog[]
  followedBy User[] @relation("UserFollows", references: [id], onDelete: Cascade)
  following  User[] @relation("UserFollows", references: [id])
}

model Admin {
  user_id   Int    @id
  firstName String
  lastName  String

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Person {
  user_id   Int    @id
  firstName String
  lastName  String

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Company {
  user_id Int      @id
  name    String
  owners  String[]

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Blog {
  id               Int           @id @default(autoincrement())
  author_id        Int
  estimatedMinutes Int
  createdAt        DateTime      @default(now())
  lastModify       DateTime      @default(now())
  title            String
  contentUrl       String
  tags             TagsOnBlogs[]

  author User @relation(fields: [author_id], references: [id], onDelete: Cascade)
}

model Tag {
  id    Int           @id @default(autoincrement())
  name  String        @unique
  blogs TagsOnBlogs[]
}

//join table
model TagsOnBlogs {
  blog_id Int
  blog    Blog @relation(fields: [blog_id], references: [id], onDelete: Cascade)
  tag_id  Int
  tag     Tag  @relation(fields: [tag_id], references: [id], onDelete: Cascade)

  @@id([blog_id, tag_id])
}
